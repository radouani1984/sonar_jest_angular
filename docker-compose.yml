version: "3"
services:
  sonarqube:
    image: sonarqube
    restart: unless-stopped
    environment:
      - SONARQUBE_JDBC_USERNAME=sonarqube
      - SONARQUBE_JDBC_PASSWORD=sonarpass
      - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonarqube
    ports:
      - "9000:9000"
      - "9092:9092"
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
    networks:
      - sonarnet
    depends_on:
      - db

  sonarscanner:
    image: sonarsource/sonar-scanner-cli
    restart: unless-stopped
    entrypoint:
      - sonar-scanner
    # command: -Dsonar.host.url=http://sonarqube:9000 -Dsonar.jdbc.url=jdbc:h2:tcp://sonarqube/sonar -Dsonar.login=0fbecdfcf85a562565ce161ff14535140d3a746d -Dsonar.jdbc.driverClassName=org.h2.Driver -Dsonar.projectKey=demo -Dsonar.projectVersion=1 -Dsonar.embeddedDatabase.port=9092
    command: -Dsonar.host.url=http://sonarqube:9000 -Dsonar.jdbc.url=jdbc:h2:tcp://sonarqube/sonar -Dsonar.login=0fbecdfcf85a562565ce161ff14535140d3a746d -Dsonar.jdbc.driverClassName=org.h2.Driver -Dsonar.embeddedDatabase.port=9092

    volumes:
      - "./WebAppWithDatabaseDemo:/usr/src"
    networks:
      - sonarnet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://sonarqube:9000"]
      interval: 1s
      timeout: 3s
      retries: 30

  db:
    image: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=sonarqube
      - POSTGRES_PASSWORD=sonarpass
      - POSTGRES_DB=sonarqube
    volumes:
      - sonarqube_db:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - sonarnet

networks:
  sonarnet:
volumes:
  postgresql_data:
  sonarqube_bundled-plugins:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_db:
  sonarqube_extensions:
# IN THE HOST MACHINE
# sysctl -w vm.max_map_count=262144
# sysctl -w fs.file-max=65536
# ulimit -n 65536
# ulimit -u 4096
